// Apply `form-control` to the following control elements:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]
//
.form-control {
    display: block;
    width: 100%;
    padding: 5px 12px;
    font-size: 13px;
    color: #222222;
    background-color: #ffffff;
    background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
    border: 1px solid #cccccc;
    border-radius: 3px; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.

    // Placeholder
    .placeholder {
        color: #999999;
    }

    // Disabled and read-only inputs
    //
    // HTML5 says that controls under a fieldset > legend:first-child won't be
    // disabled if the fieldset is disabled. Due to implementation difficulty, we
    // don't honor that edge case; we style them as disabled anyway.
    &[disabled],
    &[readonly],
    fieldset[disabled] & {
        background-color: #dddddd;
        opacity: .4; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
    }

    &[disabled],
    fieldset[disabled] & {
        cursor: not-allowed;
    }

    // Reset height for `textarea`s
    textarea& {
        height: auto;
        resize: none; //Default textarea can't resize
    }
}

// form control height in IE 10 and above
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    input.form-control {
        height: 32px;
    }
}
